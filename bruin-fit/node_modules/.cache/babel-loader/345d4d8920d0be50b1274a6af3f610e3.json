{"ast":null,"code":"var _jsxFileName = \"/Users/zhaq/Desktop/Bruin/BruinFit/bruin-fit/src/ReadOnlyRowFit.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ReadOnlyRowFit = _ref => {\n  let {\n    contact,\n    handleEditClick\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"tr\", {\n    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n      children: [\" \", contact.date, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: [\" \", contact.exercise, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: [\" \", contact.time]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: [\" \", contact.calories]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: event => handleEditClick(event, contact),\n        children: \"Edit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 9\n  }, this);\n};\n\n_c = ReadOnlyRowFit;\nexport default ReadOnlyRowFit;\n\nvar _c;\n\n$RefreshReg$(_c, \"ReadOnlyRowFit\");","map":{"version":3,"sources":["/Users/zhaq/Desktop/Bruin/BruinFit/bruin-fit/src/ReadOnlyRowFit.js"],"names":["React","ReadOnlyRowFit","contact","handleEditClick","date","exercise","time","calories","event"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AAGA,MAAMC,cAAc,GAAG,QAAkC;AAAA,MAAjC;AAAEC,IAAAA,OAAF;AAAWC,IAAAA;AAAX,GAAiC;AACrD,sBACI;AAAA,4BACI;AAAA,sBAAMD,OAAO,CAACE,IAAd;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAA,sBAAMF,OAAO,CAACG,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI;AAAA,sBAAMH,OAAO,CAACI,IAAd;AAAA;AAAA;AAAA;AAAA;AAAA,YAHJ,eAII;AAAA,sBAAMJ,OAAO,CAACK,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA,YAJJ,eAKI;AAAA,6BACI;AAAQ,QAAA,IAAI,EAAE,QAAd;AAAuB,QAAA,OAAO,EAAGC,KAAD,IAAWL,eAAe,CAACK,KAAD,EAAQN,OAAR,CAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YALJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAcH,CAfD;;KAAMD,c;AAiBN,eAAeA,cAAf","sourcesContent":["import React from 'react'\n\n\nconst ReadOnlyRowFit = ({ contact, handleEditClick }) => {\n    return (\n        <tr>\n            <td> {contact.date} </td>\n            <td> {contact.exercise} </td>\n            <td> {contact.time}</td>\n            <td> {contact.calories}</td>\n            <td>\n                <button type= \"button\" onClick={(event) => handleEditClick(event, contact)}\n                >\n                    Edit\n                </button>\n            </td>\n        </tr>\n    )\n}\n\nexport default ReadOnlyRowFit"]},"metadata":{},"sourceType":"module"}