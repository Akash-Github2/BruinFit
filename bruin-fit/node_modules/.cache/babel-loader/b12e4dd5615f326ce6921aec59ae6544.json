{"ast":null,"code":"var _jsxFileName = \"/Users/kareenakullar/Desktop/BruinFit/BruinFit/bruin-fit/src/Food.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, Fragment } from 'react';\nimport './App.css';\nimport data from \"./mock-data.json\";\nimport { nanoid } from 'nanoid';\nimport ReadOnlyRow from './components/ReadOnlyRow';\nimport EditableRow from './components/EditableRow';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Food = () => {\n  _s();\n\n  const [contacts, setContacts] = useState(data);\n  const [addFormData, setAddFormData] = useState({\n    date: '',\n    food: '',\n    calories: ''\n  });\n\n  const handleAddFormChange = event => {\n    event.preventDefault();\n    const fieldName = event.target.getAttribute('name');\n    const fieldValue = event.target.value;\n    const newFormData = { ...addFormData\n    };\n    newFormData[fieldName] = fieldValue;\n    setAddFormData(newFormData);\n  };\n\n  const handleAddFormSubmit = event => {\n    event.preventDefault();\n    const newContact = {\n      id: nanoid(),\n      date: addFormData.date,\n      food: addFormData.food,\n      calories: addFormData.calories\n    };\n    const newContacts = [...contacts, newContact];\n    setContacts(newContacts);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \" Date \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \" Food \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \" Calories \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: contacts.map(contact => /*#__PURE__*/_jsxDEV(Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(EditableRow, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(ReadOnlyRow, {\n            contact: contact\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 30\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \" Add a Food\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleAddFormSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"date\",\n        required: \"required\",\n        placeholder: \"Enter date (MM/DD/YY)\",\n        onChange: handleAddFormChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"food\",\n        required: \"required\",\n        placeholder: \"Enter food\",\n        onChange: handleAddFormChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"calories\",\n        required: \"required\",\n        placeholder: \"Enter calories\",\n        onChange: handleAddFormChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Food, \"ThULnlgH7RdtHBJGnPyj5bZKXkE=\");\n\n_c = Food;\nexport default Food;\n\nvar _c;\n\n$RefreshReg$(_c, \"Food\");","map":{"version":3,"sources":["/Users/kareenakullar/Desktop/BruinFit/BruinFit/bruin-fit/src/Food.js"],"names":["React","useState","Fragment","data","nanoid","ReadOnlyRow","EditableRow","Food","contacts","setContacts","addFormData","setAddFormData","date","food","calories","handleAddFormChange","event","preventDefault","fieldName","target","getAttribute","fieldValue","value","newFormData","handleAddFormSubmit","newContact","id","newContacts","map","contact"],"mappings":"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","sourcesContent":["import React, { useState, Fragment } from 'react';\nimport './App.css';\nimport data from \"./mock-data.json\";\nimport { nanoid } from 'nanoid';\nimport ReadOnlyRow from './components/ReadOnlyRow';\nimport EditableRow from './components/EditableRow';\n\n\n\n\n\nconst Food = () => \n{\n    const [contacts, setContacts] = useState(data);\n    const [addFormData, setAddFormData] = useState({\n       date: '',\n       food: '',\n       calories: '',\n\n    })\n\n    const handleAddFormChange = (event) => {\n        event.preventDefault();\n\n        const fieldName = event.target.getAttribute('name');\n        const fieldValue = event.target.value;\n\n        const newFormData = { ...addFormData};\n        newFormData[fieldName] = fieldValue;\n\n        setAddFormData(newFormData);\n    };\n\n    const handleAddFormSubmit = (event) => {\n        event.preventDefault();\n\n        const newContact = {\n            id: nanoid(),\n            date: addFormData.date,\n            food: addFormData.food,\n            calories: addFormData.calories,\n\n        }\n\n        const newContacts = [...contacts, newContact];\n        setContacts(newContacts);\n\n\n    }\n\n    \n\n    return(\n        \n        <div className= \"app-container\">\n            <table>\n                <thead>\n                    <tr>\n                        <th> Date </th>\n                        <th> Food </th>\n                        <th> Calories </th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {contacts.map((contact) => (\n                        <Fragment>\n                            \n                            <EditableRow/>\n                             <ReadOnlyRow contact = {contact}/>\n\n                        </Fragment>\n                        \n                    ))}\n                   \n                </tbody>\n            </table>\n            <h2> Add a Food</h2>\n            <form onSubmit= {handleAddFormSubmit}>\n                <input \n                    type = \"text\" \n                    name = \"date\" \n                    required = \"required\" \n                    placeholder = \"Enter date (MM/DD/YY)\"\n                    onChange = {handleAddFormChange}\n                />\n                <input \n                    type = \"text\" \n                    name = \"food\" \n                    required = \"required\" \n                    placeholder = \"Enter food\"\n                    onChange = {handleAddFormChange}\n                />\n                <input \n                    type = \"text\" \n                    name = \"calories\" \n                    required = \"required\" \n                    placeholder = \"Enter calories\"\n                    onChange = {handleAddFormChange}\n                />\n               \n                <button type= \"submit\">Add</button>\n            </form>\n           \n        </div>\n    )\n}\n\nexport default Food;\n"]},"metadata":{},"sourceType":"module"}