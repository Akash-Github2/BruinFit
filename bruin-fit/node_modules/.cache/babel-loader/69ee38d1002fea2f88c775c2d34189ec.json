{"ast":null,"code":"var _jsxFileName = \"/Users/zhaq/Desktop/Bruin/BruinFit/bruin-fit/src/chart-horizontal.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport { Chart as ChartJS, CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend } from 'chart.js';\nimport { Line } from 'react-chartjs-2';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend);\nconst options = {\n  indexAxis: 'y',\n  elements: {\n    bar: {\n      borderWidth: 2\n    }\n  },\n  responsive: true,\n  plugins: {\n    legend: {\n      position: 'right'\n    },\n    title: {\n      display: true,\n      text: 'Chart.js Horizontal Bar Chart'\n    }\n  }\n};\n\nconst Horizontalchart = () => {\n  _s();\n\n  const [data, setData] = useState({\n    labels: ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'],\n    datasets: [{\n      label: 'Dataset 1',\n      data: [],\n      borderColor: 'rgb(255, 99, 132)',\n      backgroundColor: 'rgba(25, 90, 13, 0.5)'\n    }, {\n      label: 'Dataset 2',\n      data: [],\n      borderColor: 'rgb(53, 162, 235)',\n      backgroundColor: 'rgba(53, 162, 235, 0.5)'\n    }]\n  });\n  useEffect(() => {\n    const fetchData = async () => {\n      const url = 'https://jsonplaceholder.typicode.com/comments';\n      const labelSet = [];\n      const dataSet1 = [];\n      const dataSet2 = [];\n      await fetch(url).then(data => {\n        console.log(\"Api data\", data);\n        const res = data.json();\n        return res;\n      }).then(res => {\n        console.log(\"ressss\", res);\n\n        for (const val of res) {\n          dataSet1.push(val.id);\n          dataSet2.push(val.postId); // labelSet.push(val.name)\n        }\n\n        setData({\n          labels: ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'],\n          datasets: [{\n            label: 'Dataset ID',\n            data: dataSet1,\n            borderColor: 'rgb(255, 99, 132)',\n            backgroundColor: 'rgba(99, 132, 0.5)'\n          }, {\n            label: 'Dataset ID2',\n            data: dataSet2,\n            borderColor: 'rgb(53, 162, 235)',\n            backgroundColor: 'rgba(53, 235, 0.5)'\n          }]\n        });\n        console.log(\"arrData\", dataSet1, dataSet2);\n      }).catch(e => {\n        console.log(\"error\", e);\n      });\n    };\n\n    fetchData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      width: '80%',\n      height: '50%'\n    },\n    children: [console.log(\"dataaaaaaaa\", data), /*#__PURE__*/_jsxDEV(Line, {\n      data: data,\n      options: options\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Horizontalchart, \"O4C6bH9QFYTcTJ5C9/cORg5yb+k=\");\n\n_c = Horizontalchart;\nexport default Horizontalchart;\n\nvar _c;\n\n$RefreshReg$(_c, \"Horizontalchart\");","map":{"version":3,"sources":["/Users/zhaq/Desktop/Bruin/BruinFit/bruin-fit/src/chart-horizontal.js"],"names":["useEffect","useState","Chart","ChartJS","CategoryScale","LinearScale","BarElement","Title","Tooltip","Legend","Line","register","options","indexAxis","elements","bar","borderWidth","responsive","plugins","legend","position","title","display","text","Horizontalchart","data","setData","labels","datasets","label","borderColor","backgroundColor","fetchData","url","labelSet","dataSet1","dataSet2","fetch","then","console","log","res","json","val","push","id","postId","catch","e","width","height"],"mappings":"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","sourcesContent":["import {useEffect, useState} from 'react';\nimport {\n    Chart as ChartJS,\n    CategoryScale,\n    LinearScale,\n    BarElement,\n    Title,\n    Tooltip,\n    Legend,\n  } from 'chart.js';\n\nimport { Line } from 'react-chartjs-2';\nChartJS.register(\n    CategoryScale,\n    LinearScale,\n    BarElement,\n    Title,\n    Tooltip,\n    Legend\n  );\nconst options = {\n    indexAxis: 'y',\n    elements: {\n      bar: {\n        borderWidth: 2,\n      },\n    },\n    responsive: true,\n    plugins: {\n      legend: {\n        position: 'right',\n      },\n      title: {\n        display: true,\n        text: 'Chart.js Horizontal Bar Chart',\n      },\n    },\n  };\n\nconst Horizontalchart =() => {\n    const [data, setData] = useState({\n        labels:['Sunday','Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'],\n        datasets: [\n          {\n            label: 'Dataset 1',\n            data:[],\n            borderColor: 'rgb(255, 99, 132)',\n            backgroundColor: 'rgba(25, 90, 13, 0.5)',\n          },\n          {\n            label: 'Dataset 2',\n            data:[],\n            borderColor: 'rgb(53, 162, 235)',\n            backgroundColor: 'rgba(53, 162, 235, 0.5)',\n          },\n        ],\n      });\n    useEffect(()=> {\n       const fetchData= async()=> {\n           const url = 'https://jsonplaceholder.typicode.com/comments'\n           const labelSet = []\n           const dataSet1 = [];\n           const dataSet2 = [];\n         await fetch(url).then((data)=> {\n             console.log(\"Api data\", data)\n             const res = data.json();\n             return res\n         }).then((res) => {\n             console.log(\"ressss\", res)\n            for (const val of res) {\n                dataSet1.push(val.id);\n                dataSet2.push(val.postId)\n                // labelSet.push(val.name)\n            }\n            setData({\n                labels:['Sunday','Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'],\n                datasets: [\n                  {\n                    label: 'Dataset ID',\n                    data:dataSet1,\n                    borderColor: 'rgb(255, 99, 132)',\n                    backgroundColor: 'rgba(99, 132, 0.5)',\n                  },\n                  {\n                    label: 'Dataset ID2',\n                    data:dataSet2,\n                    borderColor: 'rgb(53, 162, 235)',\n                    backgroundColor: 'rgba(53, 235, 0.5)',\n                  },\n                ],\n              })\n            console.log(\"arrData\", dataSet1, dataSet2)\n         }).catch(e => {\n                console.log(\"error\", e)\n            })\n        }\n        \n        fetchData();\n    },[])\n   \n    return(\n        <div style={{width:'80%', height:'50%'}}>\n            {\n                console.log(\"dataaaaaaaa\", data)\n            }\n            <Line data={data} options={options}/>\n         </div>)\n}\nexport default Horizontalchart;"]},"metadata":{},"sourceType":"module"}