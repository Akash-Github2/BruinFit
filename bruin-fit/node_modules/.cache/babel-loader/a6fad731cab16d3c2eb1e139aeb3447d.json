{"ast":null,"code":"var _jsxFileName = \"/Users/shayankarmaly/Desktop/BruinFit/bruin-fit/src/Friends.js\";\n//import React from 'react'\nimport React, { Component } from \"react\"; // friends component renders each friend\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Friends = _ref => // friend holds all information about a friend and removeFriend removes a friend frmo their friendslist\n{\n  let {\n    friend,\n    removeFriend\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"li\", {\n      className: \"list-group-item\",\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Name:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 17\n      }, this), \" \", friend.name, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Age:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 17\n      }, this), friend.age, /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: e => {\n          removeFriend(e, friend);\n        },\n        className: \"btn btn-danger trash\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \" FaTrash0 />\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 13\n    }, this), \"Friends Page! Friends List\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 9\n  }, this);\n}; //need a way to add friends\n\n\n_c = Friends;\nconst API_BASE = \"http://rest.learncode.academy/api/efa/friends\"; //creating a friendslist\n\nclass FriendsList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      friends: []\n    };\n  }\n\n}\n\nmountingData();\n{\n  fetch(API_BASE).then(res => res.json()).then(response => {\n    console.log(response);\n    this.ListeningStateChangedEvent({\n      friends: response\n    });\n  });\n}\n\ndeleteFriend = (e, friend) => {\n  fetch('${API_BASE}/${friend.id}', {\n    method: \"DELETE\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  }).then(res => {\n    let tempFriends = this.state.friends.filter(fr => fr !== friend);\n    this.setState({\n      friends: tempFriends\n    });\n  });\n};\n\nhandleSubmit = event => {\n  event.preventDefault();\n  var name = this.refs.name.value;\n  var age = this.refs.age.value;\n  var friendsTemp = this.state.friends;\n  fetch(API_BASE, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      name: name,\n      age: age\n    })\n  }).then(res => res.json()).then(response => {\n    console.log(response);\n    friendsTemp.push(response);\n    this.setState({\n      friends: friendsTemp\n    });\n    this.refs.name.value = \"\";\n    this.refs.age.value = \"\";\n  });\n};\n\nexport default FriendsList;\n\nvar _c;\n\n$RefreshReg$(_c, \"Friends\");","map":{"version":3,"sources":["/Users/shayankarmaly/Desktop/BruinFit/bruin-fit/src/Friends.js"],"names":["React","Component","Friends","friend","removeFriend","name","age","e","API_BASE","FriendsList","constructor","props","state","friends","mountingData","fetch","then","res","json","response","console","log","ListeningStateChangedEvent","deleteFriend","method","headers","tempFriends","filter","fr","setState","handleSubmit","event","preventDefault","refs","value","friendsTemp","body","JSON","stringify","push"],"mappings":";AAAA;AAEA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC,C,CACA;;;;AACA,MAAMC,OAAO,GAAI,QAA4B;AAC7C;AAAA,MADkB;AAACC,IAAAA,MAAD;AAASC,IAAAA;AAAT,GAClB;AACI,sBACI;AAAA,4BACI;AAAI,MAAA,SAAS,EAAE,iBAAf;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,OAC4BD,MAAM,CAACE,IADnC,eAEI;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ,EAG0BF,MAAM,CAACG,GAHjC,eAII;AAAQ,QAAA,OAAO,EAAGC,CAAD,IAAO;AAACH,UAAAA,YAAY,CAACG,CAAD,EAAGJ,MAAH,CAAZ;AAAuB,SAAhD;AACI,QAAA,SAAS,EAAC,sBADd;AAAA,+BAEQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFR;AAAA;AAAA;AAAA;AAAA,cAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAeH,CAjBD,C,CAoBA;;;KApBMD,O;AAsBN,MAAMM,QAAQ,GAAG,+CAAjB,C,CAEA;;AACA,MAAMC,WAAN,SAA0BR,SAA1B,CACA;AACIS,EAAAA,WAAW,CAACC,KAAD,EACX;AACI,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AAACC,MAAAA,OAAO,EAAE;AAAV,KAAb;AACH;;AALL;;AASAC,YAAY;AACZ;AACIC,EAAAA,KAAK,CAACP,QAAD,CAAL,CACCQ,IADD,CACMC,GAAG,IAAGA,GAAG,CAACC,IAAJ,EADZ,EAECF,IAFD,CAEMG,QAAQ,IAAI;AACdC,IAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACA,SAAKG,0BAAL,CAAgC;AAACT,MAAAA,OAAO,EAAEM;AAAV,KAAhC;AACH,GALD;AAOH;;AAEDI,YAAY,GAAG,CAAChB,CAAD,EAAIJ,MAAJ,KACf;AACIY,EAAAA,KAAK,CAAC,0BAAD,EAA6B;AAC9BS,IAAAA,MAAM,EAAE,QADsB;AAE9BC,IAAAA,OAAO,EAAE;AACL,sBAAgB;AADX;AAFqB,GAA7B,CAAL,CAMCT,IAND,CAMMC,GAAG,IACT;AACI,QAAIS,WAAW,GAAG,KAAKd,KAAL,CAAWC,OAAX,CAAmBc,MAAnB,CAA0BC,EAAE,IAAIA,EAAE,KAAIzB,MAAtC,CAAlB;AACA,SAAK0B,QAAL,CAAc;AAAChB,MAAAA,OAAO,EAAEa;AAAV,KAAd;AAEH,GAXD;AAYH,CAdD;;AAgBAI,YAAY,GAAGC,KAAK,IACpB;AACIA,EAAAA,KAAK,CAACC,cAAN;AACA,MAAI3B,IAAI,GAAG,KAAK4B,IAAL,CAAU5B,IAAV,CAAe6B,KAA1B;AACA,MAAI5B,GAAG,GAAG,KAAK2B,IAAL,CAAU3B,GAAV,CAAc4B,KAAxB;AACA,MAAIC,WAAW,GAAG,KAAKvB,KAAL,CAAWC,OAA7B;AAEAE,EAAAA,KAAK,CAACP,QAAD,EAAW;AACZgB,IAAAA,MAAM,EAAE,MADI;AAEZC,IAAAA,OAAO,EAAE;AACP,sBAAgB;AADT,KAFG;AAKZW,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAEjC,MAAAA,IAAI,EAAEA,IAAR;AAAcC,MAAAA,GAAG,EAAEA;AAAnB,KAAf;AALM,GAAX,CAAL,CAOKU,IAPL,CAOUC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EAPjB,EAQKF,IARL,CAQUG,QAAQ,IAAI;AAChBC,IAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACAgB,IAAAA,WAAW,CAACI,IAAZ,CAAiBpB,QAAjB;AACA,SAAKU,QAAL,CAAc;AAAEhB,MAAAA,OAAO,EAAEsB;AAAX,KAAd;AACA,SAAKF,IAAL,CAAU5B,IAAV,CAAe6B,KAAf,GAAuB,EAAvB;AACA,SAAKD,IAAL,CAAU3B,GAAV,CAAc4B,KAAd,GAAsB,EAAtB;AACD,GAdL;AAeH,CAtBD;;AA0BA,eAAezB,WAAf","sourcesContent":["//import React from 'react'\n\nimport React, { Component } from \"react\";\n// friends component renders each friend\nconst Friends  = ({friend, removeFriend}) => // friend holds all information about a friend and removeFriend removes a friend frmo their friendslist\n{\n    return(\n        <div>\n            <li className =\"list-group-item\">\n                <strong>Name:</strong> {friend.name}\n                <br />\n                <strong>Age:</strong>{friend.age}\n                <button onClick={(e) => {removeFriend(e,friend)}}\n                    className=\"btn btn-danger trash\">\n                        <span> FaTrash0 /></span>\n                    </button>\n            </li>\n            Friends Page!\n            Friends List\n        </div>\n    )\n}\n\n\n//need a way to add friends\n\nconst API_BASE = \"http://rest.learncode.academy/api/efa/friends\";\n\n//creating a friendslist\nclass FriendsList extends Component \n{\n    constructor(props)\n    {\n        super(props);\n        this.state = {friends: []};\n    }\n}\n\n\nmountingData()\n{\n    fetch(API_BASE)\n    .then(res =>res.json())\n    .then(response => {\n        console.log(response)\n        this.ListeningStateChangedEvent({friends: response})\n    })\n\n}\n\ndeleteFriend = (e, friend) => \n{\n    fetch('${API_BASE}/${friend.id}', {\n        method: \"DELETE\",\n        headers: {\n            \"Content-Type\": \"application/json\",\n        }\n    })\n    .then(res=>\n    {\n        let tempFriends = this.state.friends.filter(fr => fr !==friend)\n        this.setState({friends: tempFriends})\n\n    })\n}\n\nhandleSubmit = event => \n{\n    event.preventDefault();\n    var name = this.refs.name.value;\n    var age = this.refs.age.value;\n    var friendsTemp = this.state.friends;\n\n    fetch(API_BASE, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({ name: name, age: age })\n      })\n        .then(res => res.json())\n        .then(response => {\n          console.log(response)\n          friendsTemp.push(response)\n          this.setState({ friends: friendsTemp })\n          this.refs.name.value = \"\"\n          this.refs.age.value = \"\"\n        })      \n}\n\n\n\nexport default FriendsList"]},"metadata":{},"sourceType":"module"}