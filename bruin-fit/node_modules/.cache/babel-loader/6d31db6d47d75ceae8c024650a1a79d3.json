{"ast":null,"code":"var _jsxFileName = \"/Users/RReddy18/Desktop/School/Winter 2022 Classes/CS 35L/Bruin Fit/BruinFit/bruin-fit/src/Fitness.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, Fragment } from 'react';\nimport './App.css';\nimport data from \"./mock-data-fitness.json\";\nimport { nanoid } from 'nanoid';\nimport ReadOnlyRowFit from './ReadOnlyRowFit';\nimport EditableRowFit from './EditableRowFit';\nimport './Fitness.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Fitness = () => {\n  _s();\n\n  const [contacts, setContacts] = useState(data);\n  const [addFormData, setAddFormData] = useState({\n    date: '',\n    exercise: '',\n    time: '',\n    calories: ''\n  });\n  const [editFormData, setEditFormData] = useState({\n    date: '',\n    exercise: '',\n    time: '',\n    calories: ''\n  });\n  const [editContactId, setEditContactId] = useState(null);\n\n  const handleAddFormChange = event => {\n    event.preventDefault();\n    const fieldName = event.target.getAttribute('name');\n    const fieldValue = event.target.value;\n    const newFormData = { ...addFormData\n    };\n    newFormData[fieldName] = fieldValue;\n    setAddFormData(newFormData);\n  };\n\n  const handleEditFormChange = event => {\n    event.preventDefault();\n    const fieldName = event.target.getAttribute('date');\n    const fieldValue = event.target.value;\n    const newFormData = { ...editFormData\n    };\n    newFormData[fieldName] = fieldValue;\n    setEditFormData(newFormData);\n  };\n\n  const handleAddFormSubmit = event => {\n    event.preventDefault();\n    const newContact = {\n      id: nanoid(),\n      date: addFormData.date,\n      exercise: addFormData.exercise,\n      time: addFormData.time,\n      calories: addFormData.calories\n    };\n    const newContacts = [...contacts, newContact];\n    setContacts(newContacts);\n  };\n\n  const handleEditClick = (event, contact) => {\n    event.preventDefault();\n    setEditContactId(contact.id);\n    const formValues = {\n      date: contact.date,\n      exercise: contact.exercise,\n      time: contact.time,\n      calories: contact.calories\n    };\n    setEditFormData(formValues);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Fitness Tracking Table\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \" Date \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \" Exercise \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \" Time \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \" Calories \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Actions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: contacts.map(contact => /*#__PURE__*/_jsxDEV(Fragment, {\n            children: editContactId === contact.id ? /*#__PURE__*/_jsxDEV(EditableRowFit, {\n              editformData: editFormData,\n              handleEditformChange: handleEditFormChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 29\n            }, this) : /*#__PURE__*/_jsxDEV(ReadOnlyRowFit, {\n              contact: contact,\n              handleEditClick: handleEditClick\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 25\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \" Add an Exercise\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleAddFormSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"date\",\n        required: \"required\",\n        placeholder: \"Enter date (MM/DD/YY)\",\n        onChange: handleAddFormChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"exercise\",\n        required: \"required\",\n        placeholder: \"Enter exercise\",\n        onChange: handleAddFormChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"time\",\n        required: \"required\",\n        placeholder: \"Enter time\",\n        onChange: handleAddFormChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"calories\",\n        required: \"required\",\n        placeholder: \"Enter calories\",\n        onChange: handleAddFormChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 18\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Fitness, \"+ez36N1oVbT/wCnhnDtIbWyMD0g=\");\n\n_c = Fitness;\nexport default Fitness;\n\nvar _c;\n\n$RefreshReg$(_c, \"Fitness\");","map":{"version":3,"sources":["/Users/RReddy18/Desktop/School/Winter 2022 Classes/CS 35L/Bruin Fit/BruinFit/bruin-fit/src/Fitness.js"],"names":["React","useState","Fragment","data","nanoid","ReadOnlyRowFit","EditableRowFit","Fitness","contacts","setContacts","addFormData","setAddFormData","date","exercise","time","calories","editFormData","setEditFormData","editContactId","setEditContactId","handleAddFormChange","event","preventDefault","fieldName","target","getAttribute","fieldValue","value","newFormData","handleEditFormChange","handleAddFormSubmit","newContact","id","newContacts","handleEditClick","contact","formValues","map"],"mappings":"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","sourcesContent":["import React, { useState, Fragment } from 'react';\nimport './App.css';\nimport data from \"./mock-data-fitness.json\";\nimport { nanoid } from 'nanoid';\nimport ReadOnlyRowFit from './ReadOnlyRowFit';\nimport EditableRowFit from './EditableRowFit';\nimport './Fitness.css';\n\n\n\n\nconst Fitness = () => \n{\n    const [contacts, setContacts] = useState(data);\n    const [addFormData, setAddFormData] = useState({\n       date: '',\n       exercise: '',\n       time: '',\n       calories: '',\n\n    });\n\n    const [editFormData, setEditFormData] = useState({\n        date: '',\n       exercise: '',\n       time: '',\n       calories: '',\n    });\n\n    const [editContactId, setEditContactId] = useState(null);\n\n    const handleAddFormChange = (event) => {\n        event.preventDefault();\n\n        const fieldName = event.target.getAttribute('name');\n        const fieldValue = event.target.value;\n\n        const newFormData = { ...addFormData};\n        newFormData[fieldName] = fieldValue;\n\n        setAddFormData(newFormData);\n    };\n\n    const handleEditFormChange = (event) => {\n        event.preventDefault();\n\n        const fieldName = event.target.getAttribute('date');\n        const fieldValue = event.target.value;\n\n        const newFormData = { ...editFormData };\n        newFormData[fieldName] = fieldValue;\n\n        setEditFormData(newFormData);\n    };\n\n    const handleAddFormSubmit = (event) => {\n        event.preventDefault();\n\n        const newContact = {\n            id: nanoid(),\n            date: addFormData.date,\n            exercise: addFormData.exercise,\n            time: addFormData.time,\n            calories: addFormData.calories,\n\n        };\n\n        const newContacts = [...contacts, newContact];\n        setContacts(newContacts);\n\n\n    };\n\n    \n\n\n    const handleEditClick  = (event, contact) => {\n        event.preventDefault();\n        setEditContactId(contact.id);\n\n        const formValues = {\n            date: contact.date,\n            exercise: contact.exercise,\n            time: contact.time,\n            calories: contact.calories,\n\n        };\n\n        setEditFormData(formValues);\n    };\n\n\n\n    \n\n    return(\n        \n        <div className= \"app-container\">\n            <h1>Fitness Tracking Table</h1>\n            <form>\n            <table>\n                <thead>\n                    <tr>\n                        <th> Date </th>\n                        <th> Exercise </th>\n                        <th> Time </th>\n                        <th> Calories </th>\n                        <th>Actions</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {contacts.map((contact) => (\n                        <Fragment>\n                            { editContactId === contact.id ? (\n                            <EditableRowFit \n                            editformData = {editFormData} \n                            handleEditformChange = {handleEditFormChange}\n                            />\n                            ) : ( \n                            <ReadOnlyRowFit\n                            contact = {contact} \n                            handleEditClick = {handleEditClick}\n                            />) }\n\n                        </Fragment>\n                        \n                    ))}\n                   \n                </tbody>\n            </table>\n            </form>\n            <h2> Add an Exercise</h2>\n            <form onSubmit= {handleAddFormSubmit}>\n                <input \n                    type = \"text\" \n                    name = \"date\" \n                    required = \"required\" \n                    placeholder = \"Enter date (MM/DD/YY)\"\n                    onChange = {handleAddFormChange}\n                />\n                <input \n                    type = \"text\" \n                    name = \"exercise\" \n                    required = \"required\" \n                    placeholder = \"Enter exercise\"\n                    onChange = {handleAddFormChange}\n                />\n                <input \n                    type = \"text\" \n                    name = \"time\" \n                    required = \"required\" \n                    placeholder = \"Enter time\"\n                    onChange = {handleAddFormChange}\n                />\n                 <input \n                    type = \"text\" \n                    name = \"calories\" \n                    required = \"required\" \n                    placeholder = \"Enter calories\"\n                    onChange = {handleAddFormChange}\n                />\n               \n                <button type= \"submit\">Add</button>\n            </form>\n           \n        </div>\n\n\n                                \n    )\n}\n\nexport default Fitness;\n"]},"metadata":{},"sourceType":"module"}