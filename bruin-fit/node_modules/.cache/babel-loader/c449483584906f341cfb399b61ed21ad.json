{"ast":null,"code":"import React, { Component } from \"react\";\nimport Friend from './Friends';\nconst API_BASE = \"http://rest.learncode.academy/api/efa/friends\"; //creating a friendslist\n\nclass FriendsList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      friends: []\n    };\n  }\n\n}\n\nmountingData();\n{\n  fetch(API_BASE).then(res => res.json()).then(response => {\n    console.log(response);\n    this.ListeningStateChangedEvent({\n      friends: response\n    });\n  });\n}\n\ndeleteFriend = (e, friend) => {\n  fetch('${API_BASE}/${friend.id}', {\n    method: \"DELETE\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  }).then(res => {\n    let tempFriends = this.state.friends.filter(fr => fr !== friend);\n    this.setState({\n      friends: tempFriends\n    });\n  });\n};\n\nhandleSubmit = event => {\n  event.preventDefault();\n  var name = this.refs.name.value;\n  var age = this.refs.age.value;\n  var friendsTemp = this.state.friends;\n  fetch(API_BASE, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      name: name,\n      age: age\n    })\n  }).then(res => res.json()).then(response => {\n    console.log(response);\n    friendsTemp.push(response);\n    this.setState({\n      friends: friendsTemp\n    });\n    this.refs.name.value = \"\";\n    this.refs.age.value = \"\";\n  });\n};\n\nrender();\n{}\nexport default FriendsList;","map":{"version":3,"sources":["/Users/shayankarmaly/Desktop/BruinFit/bruin-fit/src/FriendsList.js"],"names":["React","Component","Friend","API_BASE","FriendsList","constructor","props","state","friends","mountingData","fetch","then","res","json","response","console","log","ListeningStateChangedEvent","deleteFriend","e","friend","method","headers","tempFriends","filter","fr","setState","handleSubmit","event","preventDefault","name","refs","value","age","friendsTemp","body","JSON","stringify","push","render"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,WAAnB;AAEA,MAAMC,QAAQ,GAAG,+CAAjB,C,CAEA;;AACA,MAAMC,WAAN,SAA0BH,SAA1B,CACA;AACII,EAAAA,WAAW,CAACC,KAAD,EACX;AACI,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AAACC,MAAAA,OAAO,EAAE;AAAV,KAAb;AACH;;AALL;;AASAC,YAAY;AACZ;AACIC,EAAAA,KAAK,CAACP,QAAD,CAAL,CACCQ,IADD,CACMC,GAAG,IAAGA,GAAG,CAACC,IAAJ,EADZ,EAECF,IAFD,CAEMG,QAAQ,IAAI;AACdC,IAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACA,SAAKG,0BAAL,CAAgC;AAACT,MAAAA,OAAO,EAAEM;AAAV,KAAhC;AACH,GALD;AAOH;;AAEDI,YAAY,GAAG,CAACC,CAAD,EAAIC,MAAJ,KACf;AACIV,EAAAA,KAAK,CAAC,0BAAD,EAA6B;AAC9BW,IAAAA,MAAM,EAAE,QADsB;AAE9BC,IAAAA,OAAO,EAAE;AACL,sBAAgB;AADX;AAFqB,GAA7B,CAAL,CAMCX,IAND,CAMMC,GAAG,IACT;AACI,QAAIW,WAAW,GAAG,KAAKhB,KAAL,CAAWC,OAAX,CAAmBgB,MAAnB,CAA0BC,EAAE,IAAIA,EAAE,KAAIL,MAAtC,CAAlB;AACA,SAAKM,QAAL,CAAc;AAAClB,MAAAA,OAAO,EAAEe;AAAV,KAAd;AAEH,GAXD;AAYH,CAdD;;AAgBAI,YAAY,GAAGC,KAAK,IACpB;AACIA,EAAAA,KAAK,CAACC,cAAN;AACA,MAAIC,IAAI,GAAG,KAAKC,IAAL,CAAUD,IAAV,CAAeE,KAA1B;AACA,MAAIC,GAAG,GAAG,KAAKF,IAAL,CAAUE,GAAV,CAAcD,KAAxB;AACA,MAAIE,WAAW,GAAG,KAAK3B,KAAL,CAAWC,OAA7B;AAEAE,EAAAA,KAAK,CAACP,QAAD,EAAW;AACZkB,IAAAA,MAAM,EAAE,MADI;AAEZC,IAAAA,OAAO,EAAE;AACP,sBAAgB;AADT,KAFG;AAKZa,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAEP,MAAAA,IAAI,EAAEA,IAAR;AAAcG,MAAAA,GAAG,EAAEA;AAAnB,KAAf;AALM,GAAX,CAAL,CAOKtB,IAPL,CAOUC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EAPjB,EAQKF,IARL,CAQUG,QAAQ,IAAI;AAChBC,IAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACAoB,IAAAA,WAAW,CAACI,IAAZ,CAAiBxB,QAAjB;AACA,SAAKY,QAAL,CAAc;AAAElB,MAAAA,OAAO,EAAE0B;AAAX,KAAd;AACA,SAAKH,IAAL,CAAUD,IAAV,CAAeE,KAAf,GAAuB,EAAvB;AACA,SAAKD,IAAL,CAAUE,GAAV,CAAcD,KAAd,GAAsB,EAAtB;AACD,GAdL;AAeH,CAtBD;;AAwBAO,MAAM;AACN,CAEC;AAGD,eAAenC,WAAf","sourcesContent":["import React, { Component } from \"react\";\nimport Friend from './Friends'\n\nconst API_BASE = \"http://rest.learncode.academy/api/efa/friends\";\n\n//creating a friendslist\nclass FriendsList extends Component \n{\n    constructor(props)\n    {\n        super(props);\n        this.state = {friends: []};\n    }\n}\n\n\nmountingData()\n{\n    fetch(API_BASE)\n    .then(res =>res.json())\n    .then(response => {\n        console.log(response)\n        this.ListeningStateChangedEvent({friends: response})\n    })\n\n}\n\ndeleteFriend = (e, friend) => \n{\n    fetch('${API_BASE}/${friend.id}', {\n        method: \"DELETE\",\n        headers: {\n            \"Content-Type\": \"application/json\",\n        }\n    })\n    .then(res=>\n    {\n        let tempFriends = this.state.friends.filter(fr => fr !==friend)\n        this.setState({friends: tempFriends})\n\n    })\n}\n\nhandleSubmit = event => \n{\n    event.preventDefault();\n    var name = this.refs.name.value;\n    var age = this.refs.age.value;\n    var friendsTemp = this.state.friends;\n\n    fetch(API_BASE, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({ name: name, age: age })\n      })\n        .then(res => res.json())\n        .then(response => {\n          console.log(response)\n          friendsTemp.push(response)\n          this.setState({ friends: friendsTemp })\n          this.refs.name.value = \"\"\n          this.refs.age.value = \"\"\n        })      \n}\n\nrender() \n{\n\n}\n\n\nexport default FriendsList;"]},"metadata":{},"sourceType":"module"}