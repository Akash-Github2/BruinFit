{"ast":null,"code":"var _jsxFileName = \"/Users/RReddy18/Desktop/School/Winter 2022 Classes/CS 35L/Bruin Fit/BruinFit/bruin-fit/src/Profile.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport './App.css';\nimport EditableUserProfile from './DynamicProfile';\nimport Username from './Username';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst animals = [\"Aardvark\", \"Albatross\", \"Alpaca\", \"Alligator\", \"Anchovie\", \"Angelfish\", \"Ant\", \"Antelope\", \"Armadillo\", \"Aurochs\", \"Axolotl\"];\n\nfunction randomColor() {\n  return \"#\" + Math.floor(Math.random() * 16777215).toString(16);\n}\n\nfunction defaultName() {\n  return \"Anonymous \";\n}\n\nfunction Profile() {\n  _s();\n\n  const now = new Date(Date.now());\n  const defaultBirthday = new Date(now.getTime());\n  const [editMode, setEditMode] = useState(false);\n  const [name, setName] = useState(randomName());\n  const [month, setMonth] = useState(defaultBirthday.getMonth());\n  const [day, setDay] = useState(defaultBirthday.getDate());\n  const [color, setColor] = useState(randomColor());\n  const stored = {\n    name,\n    month,\n    day,\n    color\n  };\n\n  function handleEditComplete(result) {\n    console.log(\"handleEditComplete\", result);\n\n    if (result != null) {\n      setName(result.name);\n      setMonth(result.month);\n      setDay(result.day);\n      setColor(result.color);\n    }\n\n    setEditMode(false);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Profile\",\n      children: editMode ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"My Profile\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(EditableUserProfile, {\n          stored: stored,\n          editCompleteCallback: handleEditComplete\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"My Profile\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(Username, {\n          stored: stored,\n          startEditCallback: () => setEditMode(true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Profile, \"whTlUL+kOi8uiGck37T5ulhK1C8=\");\n\n_c = Profile;\nexport default Profile;\n\nvar _c;\n\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"sources":["/Users/RReddy18/Desktop/School/Winter 2022 Classes/CS 35L/Bruin Fit/BruinFit/bruin-fit/src/Profile.js"],"names":["useState","EditableUserProfile","Username","animals","randomColor","Math","floor","random","toString","defaultName","Profile","now","Date","defaultBirthday","getTime","editMode","setEditMode","name","setName","randomName","month","setMonth","getMonth","day","setDay","getDate","color","setColor","stored","handleEditComplete","result","console","log"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAO,WAAP;AACA,OAAOC,mBAAP,MAAgC,kBAAhC;AACA,OAAOC,QAAP,MAAqB,YAArB;;;AAEA,MAAMC,OAAO,GAAG,CACZ,UADY,EAEZ,WAFY,EAGZ,QAHY,EAIZ,WAJY,EAKZ,UALY,EAMZ,WANY,EAOZ,KAPY,EAQZ,UARY,EASZ,WATY,EAUZ,SAVY,EAWZ,SAXY,CAAhB;;AAcA,SAASC,WAAT,GAAuB;AACnB,SAAO,MAAMC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAc,QAAzB,EAAmCC,QAAnC,CAA4C,EAA5C,CAAb;AACH;;AAED,SAASC,WAAT,GAAuB;AACnB,SAAO,YAAP;AACH;;AAGD,SAASC,OAAT,GAAmB;AAAA;;AACf,QAAMC,GAAG,GAAG,IAAIC,IAAJ,CAASA,IAAI,CAACD,GAAL,EAAT,CAAZ;AACA,QAAME,eAAe,GAAG,IAAID,IAAJ,CAASD,GAAG,CAACG,OAAJ,EAAT,CAAxB;AAEA,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BhB,QAAQ,CAAC,KAAD,CAAxC;AAEA,QAAM,CAACiB,IAAD,EAAOC,OAAP,IAAkBlB,QAAQ,CAACmB,UAAU,EAAX,CAAhC;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBrB,QAAQ,CAACa,eAAe,CAACS,QAAhB,EAAD,CAAlC;AACA,QAAM,CAACC,GAAD,EAAMC,MAAN,IAAgBxB,QAAQ,CAACa,eAAe,CAACY,OAAhB,EAAD,CAA9B;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoB3B,QAAQ,CAACI,WAAW,EAAZ,CAAlC;AAEA,QAAMwB,MAAM,GAAG;AAACX,IAAAA,IAAD;AAAOG,IAAAA,KAAP;AAAcG,IAAAA,GAAd;AAAmBG,IAAAA;AAAnB,GAAf;;AAEA,WAASG,kBAAT,CAA4BC,MAA5B,EAAoC;AAChCC,IAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAAkCF,MAAlC;;AACA,QAAIA,MAAM,IAAI,IAAd,EAAoB;AAChBZ,MAAAA,OAAO,CAACY,MAAM,CAACb,IAAR,CAAP;AACAI,MAAAA,QAAQ,CAACS,MAAM,CAACV,KAAR,CAAR;AACAI,MAAAA,MAAM,CAACM,MAAM,CAACP,GAAR,CAAN;AACAI,MAAAA,QAAQ,CAACG,MAAM,CAACJ,KAAR,CAAR;AACH;;AACDV,IAAAA,WAAW,CAAC,KAAD,CAAX;AACH;;AAED,sBACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,2BACI;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA,gBAEQD,QAAQ,gBACF;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,mBAAD;AACQ,UAAA,MAAM,EAAEa,MADhB;AAEQ,UAAA,oBAAoB,EAAEC;AAF9B;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA,sBADE,gBAQF;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAGE,QAAC,QAAD;AACQ,UAAA,MAAM,EAAED,MADhB;AAEQ,UAAA,iBAAiB,EAAE,MAAMZ,WAAW,CAAC,IAAD;AAF5C;AAAA;AAAA;AAAA;AAAA,gBAHF;AAAA;AAVd;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAwBH;;GAhDQN,O;;KAAAA,O;AAkDT,eAAeA,OAAf","sourcesContent":["import { useState } from 'react';\nimport './App.css';\nimport EditableUserProfile from './DynamicProfile';\nimport Username from './Username';\n\nconst animals = [\n    \"Aardvark\",\n    \"Albatross\",\n    \"Alpaca\",\n    \"Alligator\",\n    \"Anchovie\",\n    \"Angelfish\",\n    \"Ant\",\n    \"Antelope\",\n    \"Armadillo\",\n    \"Aurochs\",\n    \"Axolotl\"\n]\n\nfunction randomColor() {\n    return \"#\" + Math.floor(Math.random()*16777215).toString(16);\n}\n\nfunction defaultName() {\n    return \"Anonymous \"; \n}\n\n\nfunction Profile() {\n    const now = new Date(Date.now());\n    const defaultBirthday = new Date(now.getTime());\n\n    const [editMode, setEditMode] = useState(false);\n\n    const [name, setName] = useState(randomName());\n    const [month, setMonth] = useState(defaultBirthday.getMonth());\n    const [day, setDay] = useState(defaultBirthday.getDate());\n    const [color, setColor] = useState(randomColor());\n\n    const stored = {name, month, day, color};\n    \n    function handleEditComplete(result) {\n        console.log(\"handleEditComplete\", result);\n        if (result != null) {\n            setName(result.name);\n            setMonth(result.month);\n            setDay(result.day);\n            setColor(result.color);\n        }        \n        setEditMode(false);\n    }\n\n    return (\n        <div className=\"container\">\n            <div className=\"Profile\">                 \n                {\n                    editMode\n                        ? <>\n                            <h1>My Profile</h1>\n                            <EditableUserProfile\n                                    stored={stored}\n                                    editCompleteCallback={handleEditComplete}                            \n                            />\n                        </>\n                        : <>\n                            <h1>My Profile</h1>\n                            \n                            <Username\n                                    stored={stored}\n                                    startEditCallback={() => setEditMode(true)}\n                            />\n                        </>\n                }            \n            </div>\n        </div>\n    );\n}\n\nexport default Profile;"]},"metadata":{},"sourceType":"module"}