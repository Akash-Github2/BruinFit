{"ast":null,"code":"var _jsxFileName = \"/Users/Akash/Software/Akash/UCLA/CS35L/BruinFit/bruin-fit/src/Food.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, Fragment } from 'react';\nimport './App.css';\nimport data from \"./mock-data.json\";\nimport { nanoid } from 'nanoid';\nimport ReadOnlyRow from './components/ReadOnlyRow';\nimport EditableRow from './components/EditableRow';\nimport './Food.css';\nimport { useAuthState } from \"react-firebase-hooks/auth\";\nimport { auth, db } from \"./firebase\";\nimport { collection, addDoc, doc, setDoc } from \"firebase/firestore\";\nimport { async } from '@firebase/util';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Food() {\n  _s();\n\n  const [contacts, setContacts] = useState(data);\n  const [addFormData, setAddFormData] = useState({\n    date: '',\n    food: '',\n    calories: ''\n  });\n  const [editFormData, setEditFormData] = useState({\n    date: '',\n    food: '',\n    calories: ''\n  });\n  const [editContactId, setEditContactId] = useState(null);\n\n  const handleAddFormChange = async event => {\n    event.preventDefault();\n    const fieldName = event.target.getAttribute('name');\n    const fieldValue = event.target.value;\n    const newFormData = { ...addFormData\n    };\n    newFormData[fieldName] = fieldValue;\n    setAddFormData(newFormData); //Firebase stuff\n\n    try {\n      await addDoc(collection(db, \"users\", user.email, \"data\", \"food\", addFormData.date), {\n        foodName: addFormData.food,\n        calories: addFormData.calories\n      });\n    } catch (err) {\n      console.error(err);\n      alert(err.message);\n    }\n  };\n\n  const handleEditFormChange = event => {\n    event.preventDefault();\n    const fieldName = event.target.getAttribute('date');\n    const fieldValue = event.target.value;\n    const newFormData = { ...editFormData\n    };\n    newFormData[fieldName] = fieldValue;\n    setEditFormData(newFormData);\n  };\n\n  const handleAddFormSubmit = event => {\n    event.preventDefault();\n    const newContact = {\n      id: nanoid(),\n      date: addFormData.date,\n      food: addFormData.food,\n      calories: addFormData.calories\n    };\n    const newContacts = [...contacts, newContact];\n    setContacts(newContacts);\n  };\n\n  const handleEditClick = (event, contact) => {\n    event.preventDefault();\n    setEditContactId(contact.id);\n    const formValues = {\n      date: contact.date,\n      food: contact.food,\n      calories: contact.calories\n    };\n    setEditFormData(formValues);\n  };\n\n  const [user, loading, error] = useAuthState(auth);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Food Tracking Table\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \" Date \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \" Food \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \" Calories \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Actions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: contacts.map(contact => /*#__PURE__*/_jsxDEV(Fragment, {\n            children: editContactId === contact.id ? /*#__PURE__*/_jsxDEV(EditableRow, {\n              editformData: editFormData,\n              handleEditformChange: handleEditFormChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 29\n            }, this) : /*#__PURE__*/_jsxDEV(ReadOnlyRow, {\n              contact: contact,\n              handleEditClick: handleEditClick\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 25\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \" Add a Food\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleAddFormSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"date\",\n        required: \"required\",\n        placeholder: \"Enter date (MM/DD/YY)\",\n        onChange: handleAddFormChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"food\",\n        required: \"required\",\n        placeholder: \"Enter food\",\n        onChange: handleAddFormChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"calories\",\n        required: \"required\",\n        placeholder: \"Enter calories\",\n        onChange: handleAddFormChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 116,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Food, \"jNeJyQ4e8/bX1D6Nnx5eGNDg4+c=\", false, function () {\n  return [useAuthState];\n});\n\n_c = Food;\nexport default Food;\n\nvar _c;\n\n$RefreshReg$(_c, \"Food\");","map":{"version":3,"sources":["/Users/Akash/Software/Akash/UCLA/CS35L/BruinFit/bruin-fit/src/Food.js"],"names":["React","useState","Fragment","data","nanoid","ReadOnlyRow","EditableRow","useAuthState","auth","db","collection","addDoc","doc","setDoc","async","Food","contacts","setContacts","addFormData","setAddFormData","date","food","calories","editFormData","setEditFormData","editContactId","setEditContactId","handleAddFormChange","event","preventDefault","fieldName","target","getAttribute","fieldValue","value","newFormData","user","email","foodName","err","console","error","alert","message","handleEditFormChange","handleAddFormSubmit","newContact","id","newContacts","handleEditClick","contact","formValues","loading","map"],"mappings":"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","sourcesContent":["import React, { useState, Fragment } from 'react';\nimport './App.css';\nimport data from \"./mock-data.json\";\nimport { nanoid } from 'nanoid';\nimport ReadOnlyRow from './components/ReadOnlyRow';\nimport EditableRow from './components/EditableRow';\nimport './Food.css';\nimport { useAuthState } from \"react-firebase-hooks/auth\";\nimport { auth, db } from \"./firebase\";\nimport {\n    collection,\n    addDoc,\n    doc, \n    setDoc\n  } from \"firebase/firestore\";\nimport { async } from '@firebase/util';\n\n\n\nfunction Food() {\n    const [contacts, setContacts] = useState(data);\n    const [addFormData, setAddFormData] = useState({\n       date: '',\n       food: '',\n       calories: '',\n\n    });\n\n    const [editFormData, setEditFormData] = useState({\n        date: '',\n       food: '',\n       calories: '',\n    });\n\n    const [editContactId, setEditContactId] = useState(null);\n\n    const handleAddFormChange = async (event) => {\n        event.preventDefault();\n\n        const fieldName = event.target.getAttribute('name');\n        const fieldValue = event.target.value;\n\n        const newFormData = { ...addFormData};\n        newFormData[fieldName] = fieldValue;\n\n        setAddFormData(newFormData);\n\n        //Firebase stuff\n\n        try {\n            await addDoc(collection(db, \"users\", user.email, \"data\", \"food\", addFormData.date), {\n              foodName: addFormData.food,\n              calories: addFormData.calories,\n            });\n        \n          } catch (err) {\n            console.error(err);\n            alert(err.message);\n          }\n\n    };\n\n    const handleEditFormChange = (event) => {\n        event.preventDefault();\n\n        const fieldName = event.target.getAttribute('date');\n        const fieldValue = event.target.value;\n\n        const newFormData = { ...editFormData };\n        newFormData[fieldName] = fieldValue;\n\n        setEditFormData(newFormData);\n    };\n\n    const handleAddFormSubmit = (event) => {\n        event.preventDefault();\n\n        const newContact = {\n            id: nanoid(),\n            date: addFormData.date,\n            food: addFormData.food,\n            calories: addFormData.calories,\n\n        };\n\n        const newContacts = [...contacts, newContact];\n        setContacts(newContacts);\n\n\n        \n    };\n\n    \n\n\n    const handleEditClick  = (event, contact) => {\n        event.preventDefault();\n        setEditContactId(contact.id);\n\n        const formValues = {\n            date: contact.date,\n            food: contact.food,\n            calories: contact.calories,\n\n        };\n\n        setEditFormData(formValues);\n    };\n\n    const [user, loading, error] = useAuthState(auth);\n\n    \n\n    return(\n        \n        <div className= \"app-container\">\n            <h1>Food Tracking Table</h1>\n            {/* <h1>{user.email}</h1> */}\n            <form>\n            <table>\n                <thead>\n                    <tr>\n                        <th> Date </th>\n                        <th> Food </th>\n                        <th> Calories </th>\n                        <th>Actions</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {contacts.map((contact) => (\n                        <Fragment>\n                            { editContactId === contact.id ? (\n                            <EditableRow \n                            editformData = {editFormData} \n                            handleEditformChange = {handleEditFormChange}\n                            />\n                            ) : ( \n                            <ReadOnlyRow \n                            contact = {contact} \n                            handleEditClick = {handleEditClick}\n                            />) }\n\n                        </Fragment>\n                        \n                    ))}\n                   \n                </tbody>\n            </table>\n            </form>\n            <h2> Add a Food</h2>\n            <form onSubmit= {handleAddFormSubmit}>\n                <input \n                    type = \"text\" \n                    name = \"date\" \n                    required = \"required\" \n                    placeholder = \"Enter date (MM/DD/YY)\"\n                    onChange = {handleAddFormChange}\n                />\n                <input \n                    type = \"text\" \n                    name = \"food\" \n                    required = \"required\" \n                    placeholder = \"Enter food\"\n                    onChange = {handleAddFormChange}\n                />\n                <input \n                    type = \"text\" \n                    name = \"calories\" \n                    required = \"required\" \n                    placeholder = \"Enter calories\"\n                    onChange = {handleAddFormChange}\n                />\n               \n                <button type= \"submit\">Add</button>\n            </form>\n           \n        </div>\n\n\n                                \n    )\n}\n\nexport default Food;\n"]},"metadata":{},"sourceType":"module"}