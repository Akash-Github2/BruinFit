{"ast":null,"code":"var _jsxFileName = \"/Users/zhaq/Desktop/Bruin/BruinFit/bruin-fit/src/Home.js\";\nimport { useState } from \"react\";\nimport LineChart from './components/LineChart';\nimport { UserData } from './Data';\nimport { Line } from \"react-chartjs-2\";\nimport React from \"react\";\nimport \"./Home.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Home() {\n  // Weight line graph \n\n  /*const [userData, setUserData] = useState({\n      labels: UserData.map((data) => data.year),\n      datasets: [\n        {\n          label: \"Overall Weight\",\n          data: UserData.map((data) => data.calories),\n          backgroundColor: [\n            \"rgba(75,192,192,1)\", // Color of the line \n          ],\n          borderColor: \"black\",\n          borderWidth: 2,\n        },\n      ],\n    }); */\n  const actions = [{\n    name: 'Randomize',\n\n    handler(chart) {\n      chart.data.datasets.forEach(dataset => {\n        dataset.data = Utils.numbers({\n          count: chart.data.labels.length,\n          min: -100,\n          max: 100\n        });\n      });\n      chart.update();\n    }\n\n  }]; // </block:actions>\n  // <block:setup:1>\n\n  const DATA_COUNT = 7;\n  const NUMBER_CFG = {\n    count: DATA_COUNT,\n    min: -100,\n    max: 100\n  };\n  const labels = Utils.months({\n    count: 7\n  });\n  const data = {\n    labels: labels,\n    datasets: [{\n      label: 'Dataset 1',\n      data: Utils.numbers(NUMBER_CFG),\n      borderColor: Utils.CHART_COLORS.red,\n      backgroundColor: Utils.transparentize(Utils.CHART_COLORS.red, 0.5),\n      yAxisID: 'y'\n    }, {\n      label: 'Dataset 2',\n      data: Utils.numbers(NUMBER_CFG),\n      borderColor: Utils.CHART_COLORS.blue,\n      backgroundColor: Utils.transparentize(Utils.CHART_COLORS.blue, 0.5),\n      yAxisID: 'y1'\n    }]\n  }; // </block:setup>\n  // <block:config:0>\n\n  const config = {\n    type: 'line',\n    data: data,\n    options: {\n      responsive: true,\n      interaction: {\n        mode: 'index',\n        intersect: false\n      },\n      stacked: false,\n      plugins: {\n        title: {\n          display: true,\n          text: 'Chart.js Line Chart - Multi Axis'\n        }\n      },\n      scales: {\n        y: {\n          type: 'linear',\n          display: true,\n          position: 'left'\n        },\n        y1: {\n          type: 'linear',\n          display: true,\n          position: 'right',\n          // grid line settings\n          grid: {\n            drawOnChartArea: false // only want the grid lines for one axis to show up\n\n          }\n        }\n      }\n    }\n  }; // </block:config>\n\n  module.exports = {\n    actions: actions,\n    config: config\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [\"Welcome to Bruinfit\", /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: 800\n      },\n      children: [\"Overall Weight Change:\", /*#__PURE__*/_jsxDEV(LineChart, {\n        chartData: userData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this), \"  \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 10\n    }, this)]\n  }, void 0, true);\n}\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/Users/zhaq/Desktop/Bruin/BruinFit/bruin-fit/src/Home.js"],"names":["useState","LineChart","UserData","Line","React","Home","actions","name","handler","chart","data","datasets","forEach","dataset","Utils","numbers","count","labels","length","min","max","update","DATA_COUNT","NUMBER_CFG","months","label","borderColor","CHART_COLORS","red","backgroundColor","transparentize","yAxisID","blue","config","type","options","responsive","interaction","mode","intersect","stacked","plugins","title","display","text","scales","y","position","y1","grid","drawOnChartArea","module","exports","width","userData"],"mappings":";AACA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,SAASC,QAAT,QAAyB,QAAzB;AACA,SAAQC,IAAR,QAAmB,iBAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,YAAP;;;;AAIC,SAASC,IAAT,GACD;AAEA;;AACI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEM,QAAMC,OAAO,GAAG,CACd;AACEC,IAAAA,IAAI,EAAE,WADR;;AAEEC,IAAAA,OAAO,CAACC,KAAD,EAAQ;AACbA,MAAAA,KAAK,CAACC,IAAN,CAAWC,QAAX,CAAoBC,OAApB,CAA4BC,OAAO,IAAI;AACrCA,QAAAA,OAAO,CAACH,IAAR,GAAeI,KAAK,CAACC,OAAN,CAAc;AAACC,UAAAA,KAAK,EAAEP,KAAK,CAACC,IAAN,CAAWO,MAAX,CAAkBC,MAA1B;AAAkCC,UAAAA,GAAG,EAAE,CAAC,GAAxC;AAA6CC,UAAAA,GAAG,EAAE;AAAlD,SAAd,CAAf;AACD,OAFD;AAGAX,MAAAA,KAAK,CAACY,MAAN;AACD;;AAPH,GADc,CAAhB,CAlBN,CA6BM;AAEA;;AACA,QAAMC,UAAU,GAAG,CAAnB;AACA,QAAMC,UAAU,GAAG;AAACP,IAAAA,KAAK,EAAEM,UAAR;AAAoBH,IAAAA,GAAG,EAAE,CAAC,GAA1B;AAA+BC,IAAAA,GAAG,EAAE;AAApC,GAAnB;AAEA,QAAMH,MAAM,GAAGH,KAAK,CAACU,MAAN,CAAa;AAACR,IAAAA,KAAK,EAAE;AAAR,GAAb,CAAf;AACA,QAAMN,IAAI,GAAG;AACXO,IAAAA,MAAM,EAAEA,MADG;AAEXN,IAAAA,QAAQ,EAAE,CACR;AACEc,MAAAA,KAAK,EAAE,WADT;AAEEf,MAAAA,IAAI,EAAEI,KAAK,CAACC,OAAN,CAAcQ,UAAd,CAFR;AAGEG,MAAAA,WAAW,EAAEZ,KAAK,CAACa,YAAN,CAAmBC,GAHlC;AAIEC,MAAAA,eAAe,EAAEf,KAAK,CAACgB,cAAN,CAAqBhB,KAAK,CAACa,YAAN,CAAmBC,GAAxC,EAA6C,GAA7C,CAJnB;AAKEG,MAAAA,OAAO,EAAE;AALX,KADQ,EAQR;AACEN,MAAAA,KAAK,EAAE,WADT;AAEEf,MAAAA,IAAI,EAAEI,KAAK,CAACC,OAAN,CAAcQ,UAAd,CAFR;AAGEG,MAAAA,WAAW,EAAEZ,KAAK,CAACa,YAAN,CAAmBK,IAHlC;AAIEH,MAAAA,eAAe,EAAEf,KAAK,CAACgB,cAAN,CAAqBhB,KAAK,CAACa,YAAN,CAAmBK,IAAxC,EAA8C,GAA9C,CAJnB;AAKED,MAAAA,OAAO,EAAE;AALX,KARQ;AAFC,GAAb,CApCN,CAuDM;AAEA;;AACA,QAAME,MAAM,GAAG;AACbC,IAAAA,IAAI,EAAE,MADO;AAEbxB,IAAAA,IAAI,EAAEA,IAFO;AAGbyB,IAAAA,OAAO,EAAE;AACPC,MAAAA,UAAU,EAAE,IADL;AAEPC,MAAAA,WAAW,EAAE;AACXC,QAAAA,IAAI,EAAE,OADK;AAEXC,QAAAA,SAAS,EAAE;AAFA,OAFN;AAMPC,MAAAA,OAAO,EAAE,KANF;AAOPC,MAAAA,OAAO,EAAE;AACPC,QAAAA,KAAK,EAAE;AACLC,UAAAA,OAAO,EAAE,IADJ;AAELC,UAAAA,IAAI,EAAE;AAFD;AADA,OAPF;AAaPC,MAAAA,MAAM,EAAE;AACNC,QAAAA,CAAC,EAAE;AACDZ,UAAAA,IAAI,EAAE,QADL;AAEDS,UAAAA,OAAO,EAAE,IAFR;AAGDI,UAAAA,QAAQ,EAAE;AAHT,SADG;AAMNC,QAAAA,EAAE,EAAE;AACFd,UAAAA,IAAI,EAAE,QADJ;AAEFS,UAAAA,OAAO,EAAE,IAFP;AAGFI,UAAAA,QAAQ,EAAE,OAHR;AAKF;AACAE,UAAAA,IAAI,EAAE;AACJC,YAAAA,eAAe,EAAE,KADb,CACoB;;AADpB;AANJ;AANE;AAbD;AAHI,GAAf,CA1DN,CA6FM;;AAEAC,EAAAA,MAAM,CAACC,OAAP,GAAiB;AACf9C,IAAAA,OAAO,EAAEA,OADM;AAEf2B,IAAAA,MAAM,EAAEA;AAFO,GAAjB;AAYF,sBACE;AAAA,mDAGG;AAAK,MAAA,KAAK,EAAE;AAAEoB,QAAAA,KAAK,EAAE;AAAT,OAAZ;AAAA,wDAGD,QAAC,SAAD;AAAW,QAAA,SAAS,EAAEC;AAAtB;AAAA;AAAA;AAAA;AAAA,cAHC;AAAA;AAAA;AAAA;AAAA;AAAA,YAHH;AAAA,kBADF;AAWH;;KAvHSjD,I;AAyHV,eAAeA,IAAf","sourcesContent":["\nimport { useState } from \"react\";\nimport LineChart from './components/LineChart'\nimport { UserData } from './Data'\nimport {Line} from \"react-chartjs-2\";\nimport React from \"react\";\nimport \"./Home.css\";\n\n\n\n function Home ()\n{\n\n// Weight line graph \n    /*const [userData, setUserData] = useState({\n        labels: UserData.map((data) => data.year),\n        datasets: [\n          {\n            label: \"Overall Weight\",\n            data: UserData.map((data) => data.calories),\n            backgroundColor: [\n              \"rgba(75,192,192,1)\", // Color of the line \n            ],\n            borderColor: \"black\",\n            borderWidth: 2,\n          },\n        ],\n      }); */ \n\n      const actions = [\n        {\n          name: 'Randomize',\n          handler(chart) {\n            chart.data.datasets.forEach(dataset => {\n              dataset.data = Utils.numbers({count: chart.data.labels.length, min: -100, max: 100});\n            });\n            chart.update();\n          }\n        },\n      ];\n      // </block:actions>\n      \n      // <block:setup:1>\n      const DATA_COUNT = 7;\n      const NUMBER_CFG = {count: DATA_COUNT, min: -100, max: 100};\n      \n      const labels = Utils.months({count: 7});\n      const data = {\n        labels: labels,\n        datasets: [\n          {\n            label: 'Dataset 1',\n            data: Utils.numbers(NUMBER_CFG),\n            borderColor: Utils.CHART_COLORS.red,\n            backgroundColor: Utils.transparentize(Utils.CHART_COLORS.red, 0.5),\n            yAxisID: 'y',\n          },\n          {\n            label: 'Dataset 2',\n            data: Utils.numbers(NUMBER_CFG),\n            borderColor: Utils.CHART_COLORS.blue,\n            backgroundColor: Utils.transparentize(Utils.CHART_COLORS.blue, 0.5),\n            yAxisID: 'y1',\n          }\n        ]\n      };\n      // </block:setup>\n      \n      // <block:config:0>\n      const config = {\n        type: 'line',\n        data: data,\n        options: {\n          responsive: true,\n          interaction: {\n            mode: 'index',\n            intersect: false,\n          },\n          stacked: false,\n          plugins: {\n            title: {\n              display: true,\n              text: 'Chart.js Line Chart - Multi Axis'\n            }\n          },\n          scales: {\n            y: {\n              type: 'linear',\n              display: true,\n              position: 'left',\n            },\n            y1: {\n              type: 'linear',\n              display: true,\n              position: 'right',\n      \n              // grid line settings\n              grid: {\n                drawOnChartArea: false, // only want the grid lines for one axis to show up\n              },\n            },\n          }\n        },\n      };\n      // </block:config>\n      \n      module.exports = {\n        actions: actions,\n        config: config,\n      };\n\n\n\n\n\n\n\n\n    return(\n      <> \n      Welcome to Bruinfit\n\n         <div style={{ width: 800 }}>\n    \n        Overall Weight Change:\n        <LineChart chartData={userData} />  </div>\n      </>\n\n    );\n}\n\nexport default Home;\n\n"]},"metadata":{},"sourceType":"module"}