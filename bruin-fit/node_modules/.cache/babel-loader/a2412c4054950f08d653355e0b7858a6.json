{"ast":null,"code":"var _jsxFileName = \"/Users/RReddy18/Desktop/School/Winter 2022 Classes/CS 35L/Bruin Fit/BruinFit/bruin-fit/src/DynamicProfile.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport Group from './Group';\nimport { months, calcButtonTextColor } from './tools';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction renderMonthOptions() {\n  return months.getMonths().map((m, i) => {\n    return /*#__PURE__*/_jsxDEV(\"option\", {\n      value: i,\n      children: m.shortName\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 16\n    }, this);\n  });\n}\n\nfunction bound(value, floor, ceil) {\n  return Math.min(ceil, Math.max(value, floor));\n}\n\nexport default function EditableUserProfile(_ref) {\n  _s();\n\n  let {\n    stored,\n    editCompleteCallback\n  } = _ref;\n  console.log(\"Edit User Profile\");\n  const [name, setName] = useState(stored.name);\n  const [month, setMonth] = useState(stored.month);\n  const [day, setDay] = useState(stored.day);\n  /*const [color, setColor] = useState(stored.color); */\n\n  const maxDay = months.getNumDays(month);\n\n  function handleCancelClicked() {\n    editCompleteCallback(null);\n  }\n\n  function handleSaveClicked() {\n    console.log(\"Saved\");\n    editCompleteCallback({\n      name,\n      month,\n      day\n      /*, color*/\n\n    });\n  }\n\n  useEffect(() => {\n    setDay(bound(day, 1, maxDay));\n  }, [month]);\n  const buttonStyle = {\n    /*backgroundColor: color,\n    color: calcButtonTextColor(color)\n    */\n  }; //calcButtonTextColor(color);\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Group, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Name:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: name,\n        onChange: e => setName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Group, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Birthday:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: month,\n        onChange: e => setMonth(bound(e.target.value, 0, 11)),\n        children: renderMonthOptions()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: day,\n        onChange: e => setDay(bound(e.target.value, 1, maxDay)),\n        style: {\n          width: \"50px\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Group, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Age:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Group, {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        style: buttonStyle,\n        onClick: handleSaveClicked,\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        style: buttonStyle,\n        onClick: handleCancelClicked,\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n\n_s(EditableUserProfile, \"714ecHLqRJ2LVLNmDIWcyiIlTrU=\");\n\n_c = EditableUserProfile;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditableUserProfile\");","map":{"version":3,"sources":["/Users/RReddy18/Desktop/School/Winter 2022 Classes/CS 35L/Bruin Fit/BruinFit/bruin-fit/src/DynamicProfile.js"],"names":["useState","useEffect","Group","months","calcButtonTextColor","renderMonthOptions","getMonths","map","m","i","shortName","bound","value","floor","ceil","Math","min","max","EditableUserProfile","stored","editCompleteCallback","console","log","name","setName","month","setMonth","day","setDay","maxDay","getNumDays","handleCancelClicked","handleSaveClicked","buttonStyle","e","target","width"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react';\nimport Group from './Group';\nimport { months, calcButtonTextColor } from './tools';\n\nfunction renderMonthOptions() {\n    return months.getMonths().map( (m, i) => {\n        return <option\n            key={i}\n            value={i}\n        >\n            {m.shortName}\n        </option>\n    });\n}\n\nfunction bound(value, floor, ceil) {\n    return Math.min(ceil, Math.max(value, floor));\n}\n\nexport default function EditableUserProfile({\n    stored,\n    editCompleteCallback\n}) {\n\n    console.log(\"Edit User Profile\");\n\n    const [name, setName] = useState(stored.name);\n    const [month, setMonth] = useState(stored.month);\n    const [day, setDay] = useState(stored.day);\n    /*const [color, setColor] = useState(stored.color); */\n\n    const maxDay = months.getNumDays(month);\n\n    function handleCancelClicked() {\n        editCompleteCallback(null);\n    }\n\n    function handleSaveClicked() {\n        console.log(\"Saved\");\n        editCompleteCallback({name, month, day /*, color*/});\n    }\n\n    useEffect(() => {\n        setDay(bound(day, 1, maxDay));\n    }, [month]);\n\n    const buttonStyle = {\n        /*backgroundColor: color,\n        color: calcButtonTextColor(color)\n        */\n    };\n\n    //calcButtonTextColor(color);\n\n    return <>\n        <Group>            \n            <h2>Name:</h2>\n            <input\n                type='text'\n                value={name}\n                onChange={e => setName(e.target.value)}\n            />            \n        </Group>\n        <Group>            \n            <h2>Birthday:</h2>            \n            \n            <select\n                value={month}\n                onChange={e => setMonth(bound(e.target.value, 0, 11))}\n            >\n                {renderMonthOptions()}\n            </select>\n            <input\n                type='number'\n                value={day}\n                onChange={e => setDay(bound(e.target.value, 1, maxDay))}\n                style={{width: \"50px\"}}\n            />\n        </Group>\n        <Group>            \n            <h2>Age:</h2>\n            <input\n                //type=\"color\"\n                //value={\"color\"} \n                //onChange={e => setColor(e.target.value)}\n            />\n        </Group>\n        <Group>\n            <button style={buttonStyle} onClick={handleSaveClicked}>Save</button>\n            <button style={buttonStyle} onClick={handleCancelClicked}>Cancel</button>\n        </Group>\n    </>\n}"]},"metadata":{},"sourceType":"module"}