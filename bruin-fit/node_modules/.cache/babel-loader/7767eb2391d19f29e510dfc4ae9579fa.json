{"ast":null,"code":"var _jsxFileName = \"/Users/zhaq/Desktop/Bruin/BruinFit/bruin-fit/src/Home.js\";\nimport React from 'react';\nimport { useState } from \"react\";\nimport LineChart from './components/LineChart';\nimport { UserData } from './Data';\nimport './Home.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.options = {\n      type: 'line',\n      data: {\n        labels: ['1', '2', '3', '4', '5'],\n        datasets: [{\n          label: \"My First dataset\",\n          backgroundColor: 'rgba(52, 152, 219, 0.75)',\n          data: [5, 10, 15, 30, 50]\n        }, {\n          label: \"My Second dataset\",\n          backgroundColor: 'rgba(231, 76, 60, 0.75)',\n          data: [300, 500, 100, 40, 120]\n        }]\n      },\n      options: {\n        title: {\n          display: true,\n          text: 'Chart.js Toggle with React',\n          fontSize: 20\n        },\n        scales: {\n          xAxes: [{\n            display: false\n          }],\n          yAxes: [{\n            type: \"linear\",\n            display: true,\n            position: \"left\"\n          }]\n        },\n        responsive: true\n      }\n    };\n    this.toggleChart = this.toggleChart.bind(this);\n  }\n\n  toggleChart() {\n    this.options.type = this.options.type === 'line' ? 'bar' : 'line';\n    this.chart.destroy();\n    this.chart = new Chart(this.ctx, this.options);\n  }\n\n  componentDidMount() {\n    this.canvas = document.querySelector('canvas');\n    this.ctx = this.canvas.getContext('2d');\n    this.chart = new Chart(this.ctx, this.options);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"canvas\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-primary\",\n          onClick: this.toggleChart,\n          children: \"Toggle\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nReactDOM.render( /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 77,\n  columnNumber: 3\n}, this), document.querySelector('.app'));\n/*\nfunction into()\n{\n    return(\n        <intput tyoe = \"Hello World!\" />\n    )\n}\n\n\n\n\n function Home ()\n{\n\n// Weight line graph \n    const [userData, setUserData] = useState({\n        labels: UserData.map((data) => data.year),\n        datasets: [\n          {\n            label: \"Overall Weight\",\n            data: UserData.map((data) => data.calories),\n            backgroundColor: [\n              \"rgba(75,192,192,1)\", // Color of the line \n            ],\n            borderColor: \"black\",\n            borderWidth: 2,\n          },\n        ],\n      });\n\n    return(\n\n// Line Chart Implementation \n      <> \n      Welcome to Bruinfit\n\n         <div style={{ width: 800 }}>\n    \n        Overall Weight Change:\n        <LineChart chartData={userData} />  </div>\n      </>\n\n    );\n}\n\n\n*/\n\nexport default Home;","map":{"version":3,"sources":["/Users/zhaq/Desktop/Bruin/BruinFit/bruin-fit/src/Home.js"],"names":["React","useState","LineChart","UserData","App","Component","constructor","props","options","type","data","labels","datasets","label","backgroundColor","title","display","text","fontSize","scales","xAxes","yAxes","position","responsive","toggleChart","bind","chart","destroy","Chart","ctx","componentDidMount","canvas","document","querySelector","getContext","render","ReactDOM","Home"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { useState } from \"react\";\nimport LineChart from './components/LineChart'\nimport { UserData } from './Data'\nimport './Home.css'\n\n \nclass App extends React.Component {\n  \n  constructor(props) {\n    super(props)\n    this.options = {\n      type: 'line',\n      data: {\n        labels: ['1', '2', '3', '4', '5'],\n        datasets: [{\n          label: \"My First dataset\",\n          backgroundColor: 'rgba(52, 152, 219, 0.75)',\n          data: [\n            5, 10, 15, 30, 50\n          ]\n        }, {\n          label: \"My Second dataset\",\n          backgroundColor: 'rgba(231, 76, 60, 0.75)',\n          data: [\n            300, 500, 100, 40, 120\n          ]\n        }]\n      },\n      options: {\n        title: {\n          display: true,\n          text: 'Chart.js Toggle with React',\n          fontSize: 20\n        },\n        scales: {\n          xAxes: [{\n            display: false\n          }],\n          yAxes: [{\n            type: \"linear\",\n            display: true,\n            position: \"left\"\n          }]\n        },\n        responsive: true\n      }\n    }\n    this.toggleChart = this.toggleChart.bind(this)\n  }\n  \n  toggleChart() {\n    this.options.type = this.options.type === 'line' ? 'bar' : 'line'\n    this.chart.destroy()\n    this.chart = new Chart(this.ctx, this.options)\n  }\n  \n  componentDidMount() {\n    this.canvas = document.querySelector('canvas')\n    this.ctx = this.canvas.getContext('2d')\n    this.chart = new Chart(this.ctx, this.options)\n  }\n  \n  render() {\n    return (\n      <div>\n        <canvas />\n        <div className=\"text-center\">\n          <button className=\"btn btn-primary\" onClick={this.toggleChart}>Toggle</button>\n        </div>\n      </div>\n    )\n  }\n}\n\nReactDOM.render(\n  <App />,\n  document.querySelector('.app')\n)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/*\nfunction into()\n{\n    return(\n        <intput tyoe = \"Hello World!\" />\n    )\n}\n\n\n\n\n function Home ()\n{\n\n// Weight line graph \n    const [userData, setUserData] = useState({\n        labels: UserData.map((data) => data.year),\n        datasets: [\n          {\n            label: \"Overall Weight\",\n            data: UserData.map((data) => data.calories),\n            backgroundColor: [\n              \"rgba(75,192,192,1)\", // Color of the line \n            ],\n            borderColor: \"black\",\n            borderWidth: 2,\n          },\n        ],\n      });\n\n    return(\n\n// Line Chart Implementation \n      <> \n      Welcome to Bruinfit\n\n         <div style={{ width: 800 }}>\n    \n        Overall Weight Change:\n        <LineChart chartData={userData} />  </div>\n      </>\n\n    );\n}\n\n\n*/\n\nexport default Home;"]},"metadata":{},"sourceType":"module"}